#!/usr/bin/env node
/**
 * –¢–ï–°–¢ –ò–ù–¢–ï–†–§–ï–ô–°–ê –ò –≠–õ–ï–ú–ï–ù–¢–û–í
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –ø–∞–Ω–µ–ª–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
 */

const fs = require('fs');
const path = require('path');

console.log('\n' + '='.repeat(80));
console.log('üîç –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–†–§–ï–ô–°–ê');
console.log('='.repeat(80));

const htmlFile = '/workspaces/SuslovPA/noninput.html';
const html = fs.readFileSync(htmlFile, 'utf8');

// ===== –ü–†–û–í–ï–†–ö–ê –≠–õ–ï–ú–ï–ù–¢–û–í –û–ë–£–ß–ï–ù–ò–Ø =====
console.log('\nüìä –ü–ê–†–ê–ú–ï–¢–†–´ –û–ë–£–ß–ï–ù–ò–Ø (Learning Rate, L2, Mix):');
console.log('='.repeat(80));

const learningParams = [
  { name: 'Learning Rate (lr)', slider: 'lrSlider', val: 'lrVal', bar: 'lrBar', auto: 'lrAuto' },
  { name: 'L2-—Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏—è (l2)', slider: 'l2Slider', val: 'l2Val', bar: 'l2Bar', auto: 'l2Auto' },
  { name: '–°–º–µ—à–∏–≤–∞–Ω–∏–µ NN/PI (mix)', slider: 'mixSlider', val: 'mixVal', bar: 'mixBar', auto: 'mixAuto' }
];

learningParams.forEach(param => {
  console.log(`\nüîß ${param.name}:`);
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const hasSlider = html.includes(`id="${param.slider}"`) || html.includes(`id='${param.slider}'`);
  const hasVal = html.includes(`id="${param.val}"`) || html.includes(`id='${param.val}'`);
  const hasBar = html.includes(`id="${param.bar}"`) || html.includes(`id='${param.bar}'`);
  const hasAuto = html.includes(`id="${param.auto}"`) || html.includes(`id='${param.auto}'`);
  
  console.log(`  Slider #${param.slider}: ${hasSlider ? '‚úÖ' : '‚ùå'}`);
  console.log(`  Value #${param.val}: ${hasVal ? '‚úÖ' : '‚ùå'}`);
  console.log(`  Progress bar #${param.bar}: ${hasBar ? '‚úÖ' : '‚ùå'}`);
  console.log(`  Auto checkbox #${param.auto}: ${hasAuto ? '‚úÖ' : '‚ùå'}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ render()
  const updateVal = html.includes(`setT("${param.val}"`) || html.includes(`__setT("${param.val}"`);
  const updateBar = html.includes(`setW("${param.bar}"`) || html.includes(`__setW("${param.bar}"`);
  
  console.log(`  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Value –≤ render(): ${updateVal ? '‚úÖ' : '‚ùå –ù–ï –û–ë–ù–û–í–õ–Ø–ï–¢–°–Ø!'}`);
  console.log(`  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Bar –≤ render(): ${updateBar ? '‚úÖ' : '‚ùå –ù–ï –û–ë–ù–û–í–õ–Ø–ï–¢–°–Ø!'}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–∞
  const hasEventListener = html.includes(`${param.slider}.addEventListener`) || 
                          html.includes(`$("${param.slider}").addEventListener`) ||
                          html.includes(`getElementById("${param.slider}").addEventListener`);
  console.log(`  Event listener –Ω–∞ —Å–ª–∞–π–¥–µ—Ä: ${hasEventListener ? '‚úÖ' : '‚ö†Ô∏è  –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω'}`);
});

// ===== –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ó–ù–ê–ß–ï–ù–ò–ô –í render() =====
console.log('\n' + '='.repeat(80));
console.log('üîç –û–ë–ù–û–í–õ–ï–ù–ò–Ø –í render() –§–£–ù–ö–¶–ò–ò:');
console.log('='.repeat(80));

// –ù–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é render
const renderMatch = html.match(/function render\s*\(\s*out\s*\)\s*{([\s\S]*?)^[\s]{0,8}}/m);
if (renderMatch) {
  const renderBody = renderMatch[1];
  
  console.log('\n‚úÖ –ù–∞–π–¥–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ render():');
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–æ–≤
  const sliderUpdates = [
    { param: 'lrSlider', pattern: 'lrSlider.value' },
    { param: 'l2Slider', pattern: 'l2Slider.value' },
    { param: 'mixSlider', pattern: 'mixSlider.value' }
  ];
  
  sliderUpdates.forEach(item => {
    if (renderBody.includes(item.pattern)) {
      console.log(`  ‚úÖ ${item.param} –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è`);
    } else {
      console.log(`  ‚ùå ${item.param} –ù–ï –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è!`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
  const valueUpdates = [
    { param: 'lrVal', pattern: 'lrVal' },
    { param: 'l2Val', pattern: 'l2Val' },
    { param: 'mixVal', pattern: 'mixVal' }
  ];
  
  console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π:');
  valueUpdates.forEach(item => {
    if (renderBody.includes(`setT("${item.param}"`)) {
      console.log(`  ‚úÖ ${item.param} –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è`);
    } else {
      console.log(`  ‚ùå ${item.param} –ù–ï –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è!`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è progress bars
  const barUpdates = [
    { param: 'lrBar' },
    { param: 'l2Bar' },
    { param: 'mixBar' }
  ];
  
  console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è progress bars:');
  barUpdates.forEach(item => {
    if (renderBody.includes(`setW("${item.param}"`) || renderBody.includes(`__setW("${item.param}"`)) {
      console.log(`  ‚úÖ ${item.param} –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è`);
    } else {
      console.log(`  ‚ùå ${item.param} –ù–ï –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è!`);
    }
  });
} else {
  console.log('‚ùå –§—É–Ω–∫—Ü–∏—è render() –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
}

// ===== –ü–†–û–í–ï–†–ö–ê EVENT LISTENERS =====
console.log('\n' + '='.repeat(80));
console.log('üîç EVENT LISTENERS –ù–ê –ü–û–õ–ó–£–ù–ö–ò:');
console.log('='.repeat(80));

const eventListenerPatterns = [
  { slider: 'lrSlider', pattern: /lrSlider\s*\.addEventListener|getElementById\s*\(\s*["']lrSlider["']\s*\)\s*\.addEventListener/ },
  { slider: 'l2Slider', pattern: /l2Slider\s*\.addEventListener|getElementById\s*\(\s*["']l2Slider["']\s*\)\s*\.addEventListener/ },
  { slider: 'mixSlider', pattern: /mixSlider\s*\.addEventListener|getElementById\s*\(\s*["']mixSlider["']\s*\)\s*\.addEventListener/ }
];

eventListenerPatterns.forEach(item => {
  if (item.pattern.test(html)) {
    console.log(`\n‚úÖ ${item.slider} –∏–º–µ–µ—Ç event listener`);
    
    // –ù–∞–π—Ç–∏ —á—Ç–æ –¥–µ–ª–∞–µ—Ç listener
    const match = html.match(new RegExp(`${item.slider}\\.addEventListener\\([^,]+,\\s*(?:function|\\(|\\w+)\\s*[{\\(][\\s\\S]{0,500}(?:setT|setW)`));
    if (match) {
      console.log(`   ‚îî‚îÄ –û–±–Ω–æ–≤–ª—è–µ—Ç DOM —ç–ª–µ–º–µ–Ω—Ç—ã`);
    }
  } else {
    console.log(`\n‚ùå ${item.slider} –ù–ï –∏–º–µ–µ—Ç event listener!`);
  }
});

// ===== –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ò –°–õ–ê–ô–î–ï–† -> –ó–ù–ê–ß–ï–ù–ò–ï -> PROGRESS BAR =====
console.log('\n' + '='.repeat(80));
console.log('üîó –°–í–Ø–ó–¨: –°–õ–ê–ô–î–ï–† ‚Üí –ó–ù–ê–ß–ï–ù–ò–ï ‚Üí PROGRESS BAR');
console.log('='.repeat(80));

learningParams.forEach(param => {
  console.log(`\n${param.name}:`);
  console.log(`  1Ô∏è‚É£  –°–ª–∞–π–¥–µ—Ä #${param.slider}`);
  console.log(`       ‚Üì (value –º–µ–Ω—è–µ—Ç—Å—è)`);
  console.log(`  2Ô∏è‚É£  –¢–µ–∫—Å—Ç #${param.val}`);
  console.log(`       ‚Üì (–ø—Ä–æ—Ü–µ–Ω—Ç/–∑–Ω–∞—á–µ–Ω–∏–µ)`);
  console.log(`  3Ô∏è‚É£  Progress bar #${param.bar}`);
  console.log(`       ‚Üì (width –º–µ–Ω—è–µ—Ç—Å—è)`);
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  if (html.includes(`${param.slider}.value`)) {
    console.log(`  ‚úÖ –°–ª–∞–π–¥–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ render()`);
  } else {
    console.log(`  ‚ùå –°–ª–∞–π–¥–µ—Ä –ù–ï –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ render()`);
  }
});

// ===== –ü–†–û–í–ï–†–ö–ê AUTO CHECKBOXES =====
console.log('\n' + '='.repeat(80));
console.log('üîç AUTO CHECKBOXES:');
console.log('='.repeat(80));

learningParams.forEach(param => {
  console.log(`\n${param.name}:`);
  
  const hasAuto = html.includes(`id="${param.auto}"`);
  console.log(`  Checkbox #${param.auto}: ${hasAuto ? '‚úÖ' : '‚ùå'}`);
  
  if (html.includes(`${param.auto}.checked`)) {
    console.log(`  ‚úÖ –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ AUTO –Ω–∞–π–¥–µ–Ω–∞`);
  } else {
    console.log(`  ‚ö†Ô∏è  –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ AUTO –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–∞`);
  }
});

// ===== –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ =====
console.log('\n' + '='.repeat(80));
console.log('üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò');
console.log('='.repeat(80));

console.log(`
‚úÖ –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨ –í –ë–†–ê–£–ó–ï–†–ï:

1. üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è (Learning Rate, L2, Mix):
   - –û—Ç–∫—Ä–æ–π—Ç–µ DevTools (F12 ‚Üí Console)
   - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–¢–ê–†–¢"
   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤–∏–¥–Ω—ã –ª–æ–≥–∏ [SET-T] –∏ [SET-W]
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:
     * –°–ª–∞–π–¥–µ—Ä –º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ: ‚Ññ1 (—ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—è–µ—Ç—Å—è)
     * –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è: ‚Ññ2 (–≤–∏–¥–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª–∏ [SET-T])
     * Progress bar –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è: ‚Ññ3 (–≤–∏–¥–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª–∏ [SET-W])

2. üìä –í—Å–µ—Ö 28 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏:
   - –î–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ ~160ms
   - –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –ª–æ–≥–∏ —Ç–∏–ø–∞:
     [SET-T] #freqValue = "2.345"
     [SET-W] #freqBar = 23%
     [SET-T] #lrVal = "0.030"
     [SET-W] #lrBar = 14%

3. üéõÔ∏è AUTO checkboxes:
   - –î–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É —Ä—É—á–Ω—ã–º –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ–∂–∏–º–æ–º
   - –ü—Ä–∏ AUTO = ON: —Å–ª–∞–π–¥–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
   - –ü—Ä–∏ AUTO = OFF: —Å–ª–∞–π–¥–µ—Ä—ã –¥–æ–ª–∂–Ω—ã —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é

4. üîÑ Event Listeners:
   - –ö–æ–≥–¥–∞ –≤—ã –¥–≤–∏–∂–µ—Ç–µ —Å–ª–∞–π–¥–µ—Ä ‚Üí –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ª–æ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   - –ö–æ–≥–¥–∞ –≤—ã –∫–ª–∏–∫–∞–µ—Ç–µ AUTO ‚Üí –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ª–æ–≥–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è

üí° –ï–°–õ–ò –ß–¢–û-–¢–û –ù–ï –†–ê–ë–û–¢–ê–ï–¢:

–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:

// 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ render() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
console.log('RENDER –≤—ã–∑–æ–≤–æ–≤:', window.__telemetryDebug || 0)

// 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ setT/setW —Ä–∞–±–æ—Ç–∞—é—Ç
console.log('SET-T –≤—ã–∑–æ–≤–æ–≤:', window.__setT_calls || 0)
console.log('SET-W –≤—ã–∑–æ–≤–æ–≤:', window.__setW_calls || 0)

// 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–æ–≤
console.log('lrSlider:', document.getElementById('lrSlider')?.value)
console.log('l2Slider:', document.getElementById('l2Slider')?.value)
console.log('mixSlider:', document.getElementById('mixSlider')?.value)

// 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
console.log('lrVal:', document.getElementById('lrVal')?.textContent)
console.log('l2Val:', document.getElementById('l2Val')?.textContent)
console.log('mixVal:', document.getElementById('mixVal')?.textContent)

// 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å progress bars
console.log('lrBar width:', document.getElementById('lrBar')?.style.width)
console.log('l2Bar width:', document.getElementById('l2Bar')?.style.width)
console.log('mixBar width:', document.getElementById('mixBar')?.style.width)

// 6. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å AUTO checkboxes
console.log('lrAuto checked:', document.getElementById('lrAuto')?.checked)
console.log('l2Auto checked:', document.getElementById('l2Auto')?.checked)
console.log('mixAuto checked:', document.getElementById('mixAuto')?.checked)

–ï–°–õ–ò –ö–ê–ö–û–ô-–¢–û –≠–õ–ï–ú–ï–ù–¢ –í–û–ó–í–†–ê–©–ê–ï–¢ NULL ‚Üí –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ HTML!
–ï–°–õ–ò –ó–ù–ê–ß–ï–ù–ò–ï –ù–ï –ú–ï–ù–Ø–ï–¢–°–Ø ‚Üí render() –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è —ç—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞!
`);

console.log('='.repeat(80) + '\n');
