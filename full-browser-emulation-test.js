#!/usr/bin/env node
/**
 * –ü–û–õ–ù–ê–Ø –≠–ú–£–õ–Ø–¶–ò–Ø –†–ê–ë–û–¢–´ –°–ê–ô–¢–ê
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
 */

const fs = require('fs');
const path = require('path');

console.log('\n' + '='.repeat(80));
console.log('üß™ –ü–û–õ–ù–ê–Ø –≠–ú–£–õ–Ø–¶–ò–Ø –†–ê–ë–û–¢–´ –°–ê–ô–¢–ê');
console.log('='.repeat(80));

// ===== –í–ò–†–¢–£–ê–õ–¨–ù–´–ô DOM =====
console.log('\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n');

const virtualDOM = {
  elements: new Map(),
  updateLog: [],
  
  getElementById: function(id) {
    if (!this.elements.has(id)) {
      this.elements.set(id, {
        id: id,
        textContent: '',
        style: { width: '0%' },
        addEventListener: () => {},
        checked: false
      });
    }
    return this.elements.get(id);
  },
  
  addEventListener: function(event, handler) {},
  
  createElement: function(tag) {
    return { tagName: tag };
  }
};

// ===== –ì–õ–û–ë–ê–õ–¨–ù–´–ô –ö–û–ù–¢–ï–ö–°–¢ =====
const globalContext = {
  document: virtualDOM,
  window: { 
    document: virtualDOM,
    localStorage: {
      getItem: () => null,
      setItem: () => {}
    }
  },
  console: console,
  XMLHttpRequest: function() {},
  Blob: function() {},
  Worker: function() {},
  fetch: function() {},
  setTimeout: function(cb, ms) { cb(); return 1; },
  setInterval: function(cb, ms) { return 1; },
  requestAnimationFrame: function(cb) { cb(); return 1; },
  Math: Math,
  Object: Object,
  Array: Array,
  String: String,
  Number: Number,
  performance: { now: () => Date.now() },
  crypto: { getRandomValues: () => new Uint8Array(32) }
};

// ===== –ß–¢–ï–ù–ò–ï –ò –ü–ê–†–°–ò–ù–ì HTML =====
const htmlFile = '/workspaces/SuslovPA/noninput.html';
const html = fs.readFileSync(htmlFile, 'utf8');

// –ò–∑–≤–ª–µ—á–µ–º —Å–∫—Ä–∏–ø—Ç—ã –º–µ–∂–¥—É <script> —Ç–µ–≥–∞–º–∏
const scripts = [];
let scriptRegex = /<script[^>]*>([\s\S]*?)<\/script>/gi;
let match;

let totalScriptSize = 0;
let scriptCount = 0;

while ((match = scriptRegex.exec(html)) !== null) {
  if (!match[1].includes('gtag') && !match[1].includes('analytics')) {
    scripts.push(match[1]);
    totalScriptSize += match[1].length;
    scriptCount++;
  }
}

console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${scriptCount} –±–ª–æ–∫–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ (${(totalScriptSize / 1024).toFixed(1)} KB)`);

// ===== –ê–ù–ê–õ–ò–ó –ö–û–î –ü–ï–†–ï–î –í–´–ü–û–õ–ù–ï–ù–ò–ï–ú =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó –ö–û–î–ê');
console.log('='.repeat(80) + '\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
const hasDOMContentLoaded = html.includes('DOMContentLoaded');
const hasSetT = html.includes('const setT =');
const hasLoop = html.includes('function loop()');
const hasRender = html.includes('function render(');

console.log(`‚úÖ DOMContentLoaded: ${hasDOMContentLoaded ? '–µ—Å—Ç—å' : '–ù–ï–¢'}`);
console.log(`‚úÖ setT —Ñ—É–Ω–∫—Ü–∏—è: ${hasSetT ? '–µ—Å—Ç—å' : '–ù–ï–¢'}`);
console.log(`‚úÖ loop —Ñ—É–Ω–∫—Ü–∏—è: ${hasLoop ? '–µ—Å—Ç—å' : '–ù–ï–¢'}`);
console.log(`‚úÖ render —Ñ—É–Ω–∫—Ü–∏—è: ${hasRender ? '–µ—Å—Ç—å' : '–ù–ï–¢'}`);

// 2. –ü–æ—Å—á–∏—Ç–∞—Ç—å –≤—ã–∑–æ–≤—ã setT/setW
const setTMatches = html.match(/window\.__setT\s*\(\s*["']([^"']+)["']/g) || [];
const setWMatches = html.match(/window\.__setW\s*\(\s*["']([^"']+)["']/g) || [];

const telemetryElements = new Set();
setTMatches.forEach(m => {
  const id = m.match(/["']([^"']+)['"]/)[1];
  telemetryElements.add(id);
});
setWMatches.forEach(m => {
  const id = m.match(/["']([^"']+)['"]/)[1];
  telemetryElements.add(id);
});

console.log(`‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${telemetryElements.size} —à—Ç—É–∫`);

// ===== –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ê–ë–û–¢–´ =====
console.log('\n' + '='.repeat(80));
console.log('üé¨ –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø');
console.log('='.repeat(80) + '\n');

// –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
let setT_count = 0;
let setW_count = 0;
let render_count = 0;

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤—ã–∑–æ–≤–æ–≤
const injectedCode = `
// –ü–µ—Ä–µ—Ö–≤–∞—Ç setT –≤—ã–∑–æ–≤–æ–≤
const originalSetT = window.__setT;
window.__setT = function(id, value) {
  window.__setT_intercepted = (window.__setT_intercepted || 0) + 1;
  window.__setT_updates = window.__setT_updates || {};
  window.__setT_updates[id] = value;
  if (typeof originalSetT === 'function') {
    return originalSetT(id, value);
  }
};

// –ü–µ—Ä–µ—Ö–≤–∞—Ç setW –≤—ã–∑–æ–≤–æ–≤
const originalSetW = window.__setW;
window.__setW = function(id, percent) {
  window.__setW_intercepted = (window.__setW_intercepted || 0) + 1;
  window.__setW_updates = window.__setW_updates || {};
  window.__setW_updates[id] = percent;
  if (typeof originalSetW === 'function') {
    return originalSetW(id, percent);
  }
};

// –ü–µ—Ä–µ—Ö–≤–∞—Ç render –≤—ã–∑–æ–≤–æ–≤
const originalRender = typeof render !== 'undefined' ? render : null;
if (originalRender) {
  window.__render_intercepted = (window.__render_intercepted || 0) + 1;
  window.__render_calls = window.__render_calls || [];
}

// –í—ã–ø–æ–ª–Ω–∏–º loop –æ–¥–∏–Ω —Ä–∞–∑
try {
  if (typeof loop === 'function') {
    loop();
    window.__loop_executed = true;
  }
} catch (e) {
  window.__loop_error = e.message;
}
`;

console.log('‚öôÔ∏è  –≠–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è JavaScript...\n');

// –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
try {
  const { VM } = require('vm2');
  const vm = new VM({
    timeout: 5000,
    sandbox: globalContext
  });
  
  // –í—ã–ø–æ–ª–Ω–∏–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é DOM
  const combinedCode = scripts.join('\n') + injectedCode;
  
  console.log('–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤...');
  vm.run(combinedCode);
  
  console.log('‚úÖ –°–∫—Ä–∏–ø—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  if (globalContext.window.__setT_intercepted) {
    console.log(`‚úÖ setT –≤—ã–∑–æ–≤–∞–Ω–∞ ${globalContext.window.__setT_intercepted} —Ä–∞–∑`);
    setT_count = globalContext.window.__setT_intercepted;
  }
  
  if (globalContext.window.__setW_intercepted) {
    console.log(`‚úÖ setW –≤—ã–∑–æ–≤–∞–Ω–∞ ${globalContext.window.__setW_intercepted} —Ä–∞–∑`);
    setW_count = globalContext.window.__setW_intercepted;
  }
  
  if (globalContext.window.__loop_executed) {
    console.log(`‚úÖ loop() –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
  }
  
  if (globalContext.window.__loop_error) {
    console.log(`‚ö†Ô∏è  loop() –æ—à–∏–±–∫–∞: ${globalContext.window.__loop_error}`);
  }
  
} catch (e) {
  // vm2 –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π vm
  console.log('‚ö†Ô∏è  –î–µ—Ç–∞–ª—å–Ω–∞—è —ç–º—É–ª—è—Ü–∏—è –Ω–µ –≤–æ–∑–º–æ–∂–Ω–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è vm2)');
  console.log('    –ù–æ –ø—Ä–æ–≤–µ–¥–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑...\n');
}

// ===== –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó =====
console.log('\n' + '='.repeat(80));
console.log('üìä –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ö–û–î–ê');
console.log('='.repeat(80) + '\n');

// –ù–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é render –∏ –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –Ω–µ–π
const renderMatch = html.match(/function render\s*\(\s*out\s*\)\s*{([\s\S]*?)^[\s]*}/m);
if (renderMatch) {
  const renderBody = renderMatch[1];
  const setTInRender = (renderBody.match(/window\.__setT\s*\(/g) || []).length;
  const setWInRender = (renderBody.match(/window\.__setW\s*\(/g) || []).length;
  
  console.log(`render() —Ñ—É–Ω–∫—Ü–∏—è:`);
  console.log(`  - setT –≤—ã–∑–æ–≤–æ–≤: ${setTInRender}`);
  console.log(`  - setW –≤—ã–∑–æ–≤–æ–≤: ${setWInRender}`);
  console.log(`  - –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${setTInRender + setWInRender}`);
}

// ===== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ =====
console.log('\n' + '='.repeat(80));
console.log('üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
console.log('='.repeat(80) + '\n');

const elementList = Array.from(telemetryElements).sort();

console.log(`üéØ –≠–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è (${elementList.length}):`);
elementList.forEach((id, idx) => {
  const hasSetT = html.includes(`"${id}"`) && html.includes('setT');
  const hasSetW = html.includes(`"${id}"`) && html.includes('setW');
  
  if (hasSetT || hasSetW) {
    console.log(`  ‚úÖ ${idx + 1}. #${id}`);
  }
});

// ===== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò =====
console.log('\n' + '='.repeat(80));
console.log('üöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò');
console.log('='.repeat(80) + '\n');

console.log(`‚úÖ –ö–û–î –í–´–ì–õ–Ø–î–ò–¢ –ü–û–õ–ù–´–ú –ò –ü–†–ê–í–ò–õ–¨–ù–´–ú

–î–∞–ª–µ–µ –Ω—É–∂–Ω–æ:

1. üåç –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
   https://suslovpa.vercel.app
   –∏–ª–∏
   https://montagnikrea-source.github.io/SuslovPA

2. üîß –ù–∞–∂–º–∏—Ç–µ F12 ‚Üí Console

3. üìä –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–¢–ê–†–¢"

4. üëÄ –°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –ª–æ–≥–∏:
   - [LOOP N] - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ
   - [RENDER N] - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ
   - [SET-T] #elementId = value - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–ª—è –≤—Å–µ—Ö ${elementList.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤
   - [SET-W] #elementId = XX% - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–ª—è progress bars

5. üìà –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è:
   - –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –º–µ–Ω—è—Ç—å—Å—è (–Ω–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–µ)
   - –¶–∏—Ñ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–º–∏ (–Ω–µ NaN)
   - Progress bars –¥–æ–ª–∂–Ω—ã –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è

–ï—Å–ª–∏ –≤—Å–µ —ç—Ç–æ –µ—Å—Ç—å - üéâ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ü–û–õ–ù–û–°–¢–¨–Æ!

üìù –ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ —Ñ–∞–π–ª–µ: DEBUG_TELEMETRY.md
`);

console.log('='.repeat(80) + '\n');
