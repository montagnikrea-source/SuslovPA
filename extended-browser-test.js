#!/usr/bin/env node
/**
 * –†–ê–°–®–ò–†–ï–ù–ù–´–ô –¢–ï–°–¢ –†–ê–ë–û–¢–´ –°–ê–ô–¢–ê
 * –≠–º—É–ª–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º DOM –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π
 */

const fs = require('fs');
const path = require('path');
const vm = require('vm');

console.log('\n' + '='.repeat(80));
console.log('üß™ –†–ê–°–®–ò–†–ï–ù–ù–´–ô –¢–ï–°–¢ –°–ê–ô–¢–ê');
console.log('='.repeat(80));

// ===== –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ DOM =====
console.log('\nüì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ DOM...');

// –°–∏–º—É–ª–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—É—é —Å—Ä–µ–¥—É
const virtualDOM = {
  elements: new Map(),
  eventListeners: new Map(),
  
  getElementById: function(id) {
    if (!this.elements.has(id)) {
      this.elements.set(id, {
        id: id,
        textContent: '',
        style: { width: '0%' },
        addEventListener: (event, handler) => {
          if (!this.eventListeners.has(id)) {
            this.eventListeners.set(id, {});
          }
          if (!this.eventListeners.get(id)[event]) {
            this.eventListeners.get(id)[event] = [];
          }
          this.eventListeners.get(id)[event].push(handler);
        }
      });
    }
    return this.elements.get(id);
  }
};

// –ü—Ä–æ—á–∏—Ç–∞–µ–º HTML —Ñ–∞–π–ª
const htmlFile = '/workspaces/SuslovPA/noninput.html';
const html = fs.readFileSync(htmlFile, 'utf8');

// –ò–∑–≤–ª–µ—á–µ–º –≤—Å–µ <script> –±–ª–æ–∫–∏
const scriptRegex = /<script[^>]*>([\s\S]*?)<\/script>/gi;
let scriptContent = '';
let match;

while ((match = scriptRegex.exec(html)) !== null) {
  scriptContent += match[1] + '\n';
}

console.log(`‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ ${htmlFile} (${(html.length / 1024).toFixed(1)} KB)`);
console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${(scriptContent.match(/<script/g) || []).length} –±–ª–æ–∫–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞`);

// ===== –ê–Ω–∞–ª–∏–∑ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 2: –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò');
console.log('='.repeat(80));

const criticalFunctions = {
  'setT': '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞',
  'setW': '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã progress bar',
  'render': '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏',
  'loop': '–ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
  'attachTelemetryHandler': '–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏',
  'startSecure': '–ó–∞–ø—É—Å–∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–π –ø–µ—Å–æ—á–Ω–∏—Ü—ã'
};

console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π:');
for (const [func, description] of Object.entries(criticalFunctions)) {
  const defined = html.includes(`function ${func}`) || 
                 html.includes(`const ${func} =`) ||
                 html.includes(`${func}() {`) ||
                 html.includes(`${func}: function`);
  console.log(`  ${defined ? '‚úÖ' : '‚ùå'} ${func}: ${description}`);
}

// ===== –ê–Ω–∞–ª–∏–∑ –≤—ã–∑–æ–≤–æ–≤ setT –∏ setW =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 3: –í–´–ó–û–í–´ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –≠–õ–ï–ú–ï–ù–¢–û–í');
console.log('='.repeat(80));

// –ù–∞–π—Ç–∏ –≤—Å–µ –≤—ã–∑–æ–≤—ã setT
const setTCalls = html.match(/(?:window\.__)?setT\s*\(\s*["']([^"']+)["']/g) || [];
const setWCalls = html.match(/(?:window\.__)?setW\s*\(\s*["']([^"']+)["']/g) || [];

console.log(`\nüìù –ù–∞–π–¥–µ–Ω–æ –≤—ã–∑–æ–≤–æ–≤:
  setT: ${setTCalls.length}
  setW: ${setWCalls.length}`);

// –ò–∑–≤–ª–µ—á–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID —ç–ª–µ–º–µ–Ω—Ç–æ–≤
const setTIds = new Set();
const setWIds = new Set();

setTCalls.forEach(call => {
  const match = call.match(/["']([^"']+)['"]/);
  if (match) setTIds.add(match[1]);
});

setWCalls.forEach(call => {
  const match = call.match(/["']([^"']+)['"]/);
  if (match) setWIds.add(match[1]);
});

console.log(`\nüìã –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è:
  setT: ${setTIds.size} —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  setW: ${setWIds.size} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);

console.log('\n‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã —Å setT:');
Array.from(setTIds).forEach(id => console.log(`    - ${id}`));

console.log('\n‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã —Å setW:');
Array.from(setWIds).forEach(id => console.log(`    - ${id}`));

// ===== –ê–Ω–∞–ª–∏–∑ —Ç–æ—á–µ–∫ –≤—ã–∑–æ–≤–∞ render() =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 4: –¢–û–ß–ö–ò –í–´–ó–û–í–ê render()');
console.log('='.repeat(80));

// –ù–∞–π—Ç–∏ –≥–¥–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è render
const renderCalls = [];
const lines = html.split('\n');
lines.forEach((line, idx) => {
  if (line.includes('render(') && !line.includes('function render')) {
    renderCalls.push({
      line: idx + 1,
      code: line.trim().substring(0, 80)
    });
  }
});

console.log(`\nüìç –ù–∞–π–¥–µ–Ω–æ ${renderCalls.length} –≤—ã–∑–æ–≤–æ–≤ render():`);
renderCalls.forEach(call => {
  console.log(`  –°—Ç—Ä–æ–∫–∞ ${call.line}: ${call.code}`);
});

// ===== –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ render() =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 5: –ü–ê–†–ê–ú–ï–¢–†–´ render()');
console.log('='.repeat(80));

console.log('\nüîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç render():');
const renderParams = html.match(/render\s*\(\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\s*\)/g) || [];
const uniqueParams = new Set();

renderParams.forEach(call => {
  const param = call.match(/render\s*\(\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\s*\)/);
  if (param) uniqueParams.add(param[1]);
});

Array.from(uniqueParams).forEach(param => {
  console.log(`  - ${param}`);
});

// ===== –ê–Ω–∞–ª–∏–∑ —Ü–∏–∫–ª–∞ loop() =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 6: –¶–ò–ö–õ –û–ë–ù–û–í–õ–ï–ù–ò–Ø loop()');
console.log('='.repeat(80));

// –ù–∞–π—Ç–∏ —Ü–∏–∫–ª
const loopStart = html.indexOf('function loop()');
const loopEnd = html.indexOf('}', loopStart);
const loopBody = html.substring(loopStart, Math.min(loopEnd + 100, html.length));

console.log('\nüìä –ß—Ç–æ –¥–µ–ª–∞–µ—Ç loop():');
console.log(loopBody.split('\n').slice(0, 30).join('\n'));

// ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 7: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø');
console.log('='.repeat(80));

const hasDOM = html.includes('DOMContentLoaded');
const hasLegacy = html.includes('window.__legacyEngine');
const hasSetup = html.includes('window.__setT = setT');
const hasStart = html.includes('window.__legacyEngine.start()');

console.log(`\nüîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
  ${hasDOM ? '‚úÖ' : '‚ùå'} DOMContentLoaded –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  ${hasLegacy ? '‚úÖ' : '‚ùå'} window.__legacyEngine –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
  ${hasSetup ? '‚úÖ' : '‚ùå'} window.__setT —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
  ${hasStart ? '‚úÖ' : '‚ùå'} window.__legacyEngine.start() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è`);

// ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ =====
console.log('\n' + '='.repeat(80));
console.log('üîç –ê–ù–ê–õ–ò–ó 8: –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ö–û–ù–§–õ–ò–ö–¢–´');
console.log('='.repeat(80));

const hasRequestAnimationFrame = html.includes('requestAnimationFrame');
const hasSetTimeout = html.includes('setTimeout');
const hasWorker = html.includes('Worker');
const hasIIFE = html.includes('(function() {') || html.includes('(() => {');

console.log(`\n‚ö†Ô∏è  –ú–µ—Ö–∞–Ω–∏–∑–º—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏:
  requestAnimationFrame: ${hasRequestAnimationFrame ? '‚úÖ (–º–æ–∂–µ—Ç –∫–æ–Ω–∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å!)' : '‚ùå'}
  setTimeout: ${hasSetTimeout ? '‚úÖ' : '‚ùå'}
  Web Worker: ${hasWorker ? '‚úÖ (–º–æ–∂–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É)' : '‚ùå'}
  IIFE: ${hasIIFE ? '‚úÖ (–æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã)' : '‚ùå'}`);

// ===== –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê =====
console.log('\n' + '='.repeat(80));
console.log('üìã –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê');
console.log('='.repeat(80));

const allGood = hasDOM && hasLegacy && hasSetup && hasStart && setTIds.size > 15;

if (allGood) {
  console.log(`\n‚úÖ –ö–û–î –í–´–ì–õ–Ø–î–ò–¢ –ü–†–ê–í–ò–õ–¨–ù–´–ú!

üîç –ß–¢–û –ú–û–ñ–ï–¢ –ë–´–¢–¨ –ü–†–û–ë–õ–ï–ú–û–ô:

1. ‚ö†Ô∏è  render() –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏–∑ blender.blend()
   ‚Üí –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏: f, conf, inertia, state
   ‚Üí –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ console.log(out) –≤ render() –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

2. ‚ö†Ô∏è  setT/setW —Ä–∞–±–æ—Ç–∞—é—Ç —Å window.__setT/window.__setW
   ‚Üí –û–Ω–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ DOMContentLoaded
   ‚Üí –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–æ–π –µ—Å–ª–∏ loop() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –î–û –∑–∞–≥—Ä—É–∑–∫–∏ DOM

3. ‚ö†Ô∏è  loop() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ window.__legacyEngine.start()
   ‚Üí –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ console.log() –≤ loop() –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∑–æ–≤–æ–≤
   ‚Üí –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

üöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:

–î–æ–±–∞–≤—å—Ç–µ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞:

// –í –Ω–∞—á–∞–ª–æ loop()
console.log('[LOOP] called, calling render...');

// –í –Ω–∞—á–∞–ª–æ render(out)
console.log('[RENDER] called with:', out);
console.log('[RENDER] updating:', out.f, out.conf, out.inertia);

// –í setT/setW
const setT = (id, v) => {
  console.log('[SET-T]', id, '=', v);
  const el = document.getElementById(id);
  if (el) el.textContent = v;
};

–ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–∏ –ª–æ–≥–∏!
  `);
} else {
  console.log('\n‚ùå –ù–ê–ô–î–ï–ù–´ –°–ï–†–¨–ï–ó–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
  if (!hasDOM) console.log('  - DOMContentLoaded –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
  if (!hasLegacy) console.log('  - window.__legacyEngine –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!');
  if (!hasSetup) console.log('  - window.__setT –Ω–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!');
  if (!hasStart) console.log('  - window.__legacyEngine.start() –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è!');
  if (setTIds.size < 15) console.log(`  - –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –≤—ã–∑–æ–≤–æ–≤ setT (${setTIds.size})`);
}

console.log('\n' + '='.repeat(80) + '\n');
